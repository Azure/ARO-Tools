$schema: pipeline.schema.v1
resourceGroups:
- name: hcp-underlay-uks
  steps:
  - action: Shell
    aksCluster: aro-hcp-aks
    command: make deploy
    dryRun: {}
    name: deploy
    shellIdentity:
      configRef: aroDevopsMsiId
    variables:
    - configRef: maestro_image
      name: MAESTRO_IMAGE
  - action: Shell
    command: make deploy
    dryRun:
      variables:
      - name: DRY_RUN
        value: A very dry one
      - name: FROM_EV2_REGION
        value: "3"
      - name: FROM_EV2_CORE
        value: vault.azure.net
    name: dry-run
    shellIdentity:
      configRef: aroDevopsMsiId
  - action: ARM
    deploymentLevel: ResourceGroup
    name: svc
    parameters: test.bicepparam
    template: templates/svc-cluster.bicep
    variables:
    - input:
        name: whatever
        step: deploy
      name: MAESTRO_IMAGE
  - action: DelegateChildZone
    childZone:
      configRef: childZone
    dependsOn:
    - deploy
    name: cxChildZone
    parentZone:
      configRef: parentZone
  - action: SetCertificateIssuer
    dependsOn:
    - deploy
    issuer:
      configRef: provider
    name: issuerTest
    vaultBaseUrl:
      configRef: vaultBaseUrl
  - action: SetCertificateIssuer
    dependsOn:
    - deploy
    issuer:
      value: provider
    name: issuerTestOutputChaining
    vaultBaseUrl:
      input:
        name: kvUrl
        step: deploy
  - action: CreateCertificate
    certificateName:
      value: hcp-mdsd
    contentType:
      value: x-pem-file
    issuer:
      value: OneCertV2-PrivateCA
    name: cert
    san:
      value: hcp-mdsd.geneva.keyvault.aro-int.azure.com
    vaultBaseUrl:
      value: https://arohcp-svc-ln.vault.azure.net
  - action: ResourceProviderRegistration
    name: rpRegistration
    resourceProviderNamespaces:
      value:
      - Microsoft.Storage
      - Microsoft.EventHub
      - Microsoft.Insights
  - accountName:
      configRef: geneva.logs.rp.accountName
    action: RPLogsAccount
    adminAlias:
      configRef: geneva.logs.administrators.alias
    adminGroup:
      configRef: geneva.logs.administrators.securityGroup
    certdescription:
      value: HCP Service Cluster
    certsan:
      value: san
    configVersion:
      value: version
    environment:
      configRef: geneva.logs.environment
    events:
      akskubesystem: kubesystem
    metricsAccount:
      configRef: geneva.metrics.rp.account
    name: rpAccount
    namespace:
      value: ns
    secretId:
      configRef: geneva.logs.rp.accountCert
    subscriptionId:
      value: sub
    typeName:
      configRef: geneva.logs.typeName
  - accountName:
      configRef: geneva.logs.cluster.accountName
    action: ClusterLogsAccount
    adminAlias:
      configRef: geneva.logs.administrators.alias
    adminGroup:
      configRef: geneva.logs.administrators.securityGroup
    certdescription:
      value: HCP Management Cluster
    certsan:
      value: san
    configVersion:
      value: version
    environment:
      configRef: geneva.logs.environment
    events:
      akskubesystem: kubesystem
    metricsAccount:
      configRef: geneva.metrics.cluster.account
    name: clusterAccount
    namespace:
      value: ns
    secretId:
      configRef: geneva.logs.cluster.accountCert
    subscriptionId:
      value: sub
    typeName:
      configRef: geneva.logs.typeName
  - action: ImageMirror
    digest:
      value: digest
    name: image-mirror
    pullSecretKeyVault:
      value: pullSecretKeyVault
    pullSecretName:
      value: pullSecretName
    repository:
      value: repository
    shellIdentity:
      value: shellIdentity
    sourceRegistry:
      value: sourceRegistry
    targetACR:
      value: targetACR
  subscription: hcp-int-svc-uksouth
  subscriptionProvisioning:
    airsRegisteredUserPrincipalId:
      configRef: .svc.subscription.airsRegisteredUserPrincipalId
    certificateDomains:
      configRef: .svc.subscription.certificateDomains
    displayName:
      configRef: .svc.subscription.displayName
- name: global
  steps:
  - action: ImageMirror
    digest:
      value: digest
    name: image-mirror-ii
    pullSecretKeyVault:
      value: pullSecretKeyVault
    pullSecretName:
      value: pullSecretName
    repository:
      value: repository
    shellIdentity:
      value: shellIdentity
    sourceRegistry:
      value: sourceRegistry
    targetACR:
      value: targetACR
  subscription: hcp-uksouth
  subscriptionProvisioning:
    displayName:
      configRef: .svc.subscription.displayName
rolloutName: Test Rollout
serviceGroup: Microsoft.Azure.ARO.Test
